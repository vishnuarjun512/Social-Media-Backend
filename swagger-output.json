{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Desc",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "tags":[{
    "name":"User",
    "description":"Everything about a User Actions"
  },{
    "name":"Post",
    "description":"Everything about a Post Actions"
  },{
    "name":"Follow",
    "description":"Everything about Followers and Following Actions"
  }],
  "paths": {
    "/api/user/login": {
      "post": {   
        "tags":["User"],
        "summary": "To Login a User",
        "description": "To Login a User",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type":"string",
                  "example": "test"
                },
                "email": {
                  "type":"string",
                  "example": "test@gmail.com"
                },
                "password": {
                  "type":"string",
                  "example": "test"
                }
              }
            }
          }
        ],
        "responses": {
          
          "200": {
            "description": "Login Successful"
          },
          "404": {
            "description": "Login Failed"
          }
        }
      }
    },
    "/api/user/register": {
      "post": {
        "tags":["User"],
        "summary": "To Register a User",
        "description": "To Register a User",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type":"string",
                  "example": "test"
                },
                "email": {
                  "type":"string",
                  "example": "test@gmail.com"
                },
                "password": {
                  "type":"string",
                  "example": "test"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Successful"
          },
          "404": {
            "description": "Login Failed"
          }
        }
      }
    },
    "/api/user/updateUser/{userId}": {
      "put": {
        "tags":["User"],
        "summary": "Updates User Information",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "profilePicture": {
                  "example": "any"
                }
              }
            }
          },
          {
            "name": "Cookie",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User's authentication cookie - auth_token"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/user/delete/{userId}": {
      "delete": {
        "tags":["User"],
        "summary": "Delete a Users Account",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/user/getUser/{userId}": {
      "get": {
        "tags":["User"],
        "summary":"Returns Single User Info",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/user/getUsers/{userId}": {
      "get": {
        "tags":["User"],
        "description": "",
        "summary":"Returns Every Other Users Info",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/user/signout": {
      "get": {
        "tags":["User"],
        "summary": "Signout a User",
        "description":"Signs a User Out of Loggedin state",
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },

    "/api/post/create/{userId}": {
      "post": {
        "tags":["Post"],
        "summary":"Creates a Post",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/post/getPost/{userId}": {
      "get": {
        "tags":["Post"],
        "summary":"Retrieves a Single Post",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/post/getPosts/{userId}": {
      "get": {
        "tags":["Post"],
        "summary":"Retrieves a All Posts",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/post/deletePost/{id}": {
      "delete": {
        "tags":["Post"],
        "summary":"Deletes a Post",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/post/update/{id}": {
      "put": {
        "tags":["Post"],
        "summary":"Updates a Post",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "content": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/post/deleteAll/{userId}": {
      "delete": {
        "tags":["Post"],
        "summary":"Deletes all Posts of a User",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/api/follower/follow/{userId}": {
      "post": {
        "tags":["Follow"],
        "summary":"Follows a Person",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "toFollow": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/follower/unfollow/{userId}": {
      "post": {
        "tags":["Follow"],
        "summary":"Unfollows a Person",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "toUnfollow": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/follower/likePost/{userId}": {
      "post": {
        "tags":["Follow"],
        "summary":"Like a Post",
        "description": "Only a Follower can be able to like a Post",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/follower/unlikePost/{userId}": {
      "post": {
        "tags":["Follow"],
        "summary":"UnLike a Post",
        "description": "Only a Follower can be able to unlike a Post",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/follower/comment/{userId}": {
      "post": {
        "tags":["Follow"],
        "summary":"Comment on a Post",
        "description": "Only a Follower can be able to comment a Post",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/follower/uncomment/{userId}": {
      "post": {
        "tags":["Follow"],
        "summary":"Uncomment on a Post",
        "description": "Only a Follower can be able to uncomment a Post",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/follower/getFollowers/{userId}": {
      "get": {
        "tags":["Follow"],
        "summary":"Get All Followers",
        "description": "Retrives an Array of Followers of a particular User",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "example":"c5bad4df-44a8-4776-948a-e875e85d254d"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/follower/getFollowings/{userId}": {
      "get": {
        "tags":["Follow"],
        "summary":"Get All Followings",
        "description": "Retrives an Array of Followings of a particular User",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "example":"c5bad4df-44a8-4776-948a-e875e85d254d"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/follower/getFollowingPosts/{userId}": {
      "get": {
        "tags":["Follow"],
        "summary":"Get All Followings",
        "description": "Retrives an Array of Posts of Users followed by the UserID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "example":"c5bad4df-44a8-4776-948a-e875e85d254d"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/follower/getUserPosts/{userId}": {
      "get": {
        "tags":["Post"],
        "summary":"Get All Posts",
        "description": "Retrives an Array of Posts of particular User",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },

  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "format": "uuid"
        },
        "userRef": {
          "$ref": "#/definitions/User"
        },
        "content": {
          "type": "string"
        },
        "likes": {
          "type":"array"
        },
        "likesCount": {
          "type": "integer"
        },
        "comments": {
          "type": "string"
        },
        "commentsCount": {
          "type": "integer"
        }
      },
      "json": {
        "name": "Order"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Follow": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "userRef": {
          "$ref": "#/definitions/User"
        },
        "following": {
          "type": "array",
          "xml":{
            "type":"string"
          }
        },
        "followingCount": {
          "type": "integer"
        },
        "followers": {
          "type": "array",
          "xml":{
            "type":"string"
          }
        },
        "followersCount": {
          "type": "integer"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}